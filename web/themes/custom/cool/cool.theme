<?php

/**
 * @file
 * Functions to support theming in the cool theme.
 */

use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK().
 *
 * Add class to footer regions.
 */
function cool_preprocess_region(&$vars) {
  if (in_array($vars['region'], ['footer_left', 'footer_center'])) {
    $vars['attributes']['class'][] = 'footer-nav';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Get site name into node template.
 */
function cool_preprocess_node(&$vars) {
  // Get sharing url.
  $vars['share_url'] = Url::fromRoute('<current>', [], ['absolute' => 'true'])
    ->toString();
  // Get site name.
  $vars['site_name'] = \Drupal::config('system.site')->get('name');
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Attach Google font and noscript to page.
 */
function cool_preprocess_html(&$vars) {
  // Add Google font.
  $vars['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'link',
      '#attributes' => [
        'href' => 'https://fonts.googleapis.com/css?family=Open+Sans:400,700&subset=latin,latin-ext',
        'rel' => 'stylesheet',
        'type' => 'text/css',
      ],
    ],
    'link',
  ];

  // Set noscript.
  $no_script_css = [
    '#type' => 'html_tag',
    '#tag' => 'link',
    '#attributes' => [
      'href' => '/' . drupal_get_path('theme', 'cool') . '/css/no-script.css',
      'rel' => 'stylesheet',
    ],
  ];
  $vars['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'noscript',
      '#value' => \Drupal::service('renderer')->render($no_script_css),
    ],
    'noscript',
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Add classes to facet alphabet block and display its title on front page.
 */
function cool_preprocess_block(&$vars) {
  if ($vars['plugin_id'] === 'facet_block:alphabet' && \Drupal::service('path.matcher')->isFrontPage()) {
    $vars['label'] = $vars['elements']['#configuration']['label'];
    $vars['attributes']['class'][] = 'box';
    $vars['attributes']['class'][] = 'abecedny-zoznam';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Hide active item from local tasks displayed on user pages.
 */
function cool_preprocess_menu_local_tasks(&$vars) {
  $current = \Drupal::routeMatch()->getRouteName();
  if (strpos($current, 'user.') !== FALSE && isset($vars['primary'][$current])) {
    unset($vars['primary'][$current]);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add theme suggestion for footer blocks.
 */
function cool_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Load block region.
  /** @var \Drupal\block\Entity\Block $block */
  $block = \Drupal::entityTypeManager()
    ->getStorage('block')
    ->load($variables['elements']['#id']);
  $region = $block->getRegion();

  if (in_array($region, ['footer_left', 'footer_center'])) {
    // We don't want to put it to end, so we can override it with some other
    // suggestions if needed.
    array_splice($suggestions, 3, 0, ['block__footer_nav']);
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function cool_theme_suggestions_alter(array &$suggestions, array $variables) {

  if (isset($variables['element']) && isset($variables['element']['#type']) && $variables['element']['#type'] == 'form') {
    $original_theme_hook = $variables['theme_hook_original'];
    $new_suggestion = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
    if (!in_array($new_suggestion, $suggestions)) {
      $suggestions[] = $new_suggestion;
    }
  }

  if (isset($variables['element']) && isset($variables['element']['#type']) && $variables['theme_hook_original'] == 'form_element') {
    $original_theme_hook = $variables['theme_hook_original'];
    $new_suggestion = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#name']);
    if (!in_array($new_suggestion, $suggestions)) {
      $suggestions[] = $new_suggestion;
    }
  }

  return $suggestions;

}

/**
 * Implements template_preprocess_views_view().
 */
function cool_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  if (in_array($view->id(), ['today', 'most_visited_content'])) {
    $variables['more']['#options']['attributes']['class'] = array(
      'more',
    );
  }

  if (in_array($view->id(), ['solr_search_word'])) {
    $variables['#attached']['library'][] = 'cool/facets';
  }
}

/**
 * Implements template_preprocess_field().
 */
function cool_preprocess_field(&$variables) {
  if ($variables['field_name'] === 'field_store_link') {
    foreach ($variables['items'] as $k => $item) {
      $field_value = $variables['items'][$k]['content']['#context']['value'];
      $variables['items'][$k]['content'] = [
        '#type' => 'inline_template',
        '#template' => 'kúpiť na <a href="' . $field_value . '" target="_blank">veda.sav.sk</a>',
      ];
    }
  }
}

/**
 * Implements hook_form_alter
 */
function cool_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if ($form_id == 'views_exposed_form') {
    if ($form['#id'] == 'views-exposed-form-solr-search-word-page-2') {
      // Change search submit button value
      $form['actions']['submit']['#value'] = t('Hľadať');
      // Add placeholder to search form
      $form['text']['#placeholder'] = t('Zadajte hľadané heslo ...');
    }
  }
}

/**
 * Implements hook_theme_suggestion_HOOK_alter().
 */
function cool_theme_suggestions_container_alter(&$suggestions, $variables) {
  if ($variables['theme_hook_original'] == 'container') {
    if (isset($variables['element']['#type']) && $variables['element']['#type'] == 'view') {
      $suggestions[] = 'container__view__' . $variables['element']['#view_id'];
    }
    elseif (isset($variables['element']['0']['#view']) && is_a($variables['element']['0']['#view'], \Drupal\views\ViewExecutable::class)) {
      $view_id = $variables['element']['0']['#view']->id();
      $suggestions[] = 'container__view__' . $view_id;
    }
  }
}

/**
 * Implements template_preprocess_form_element_label().
 */
function cool_preprocess_form_element_label(&$variables) {
  // Search form label visually hidden
  if (isset($variables['element']) && $variables['element']['#title'] == 'Search') {
    $variables['attributes']['class'][] = 'visually-hidden';
  }
}

/**
 * Implements template_preprocess_image_style().
 *
 * For SVG files we don't want to create image with image style, because
 * it's not possible.
 */
function cool_preprocess_image_style(&$variables) {
  $mimetype = \Drupal::service('file.mime_type.guesser')
    ->guess($variables['uri']);
  if (strpos($mimetype, 'svg') !== FALSE) {
    $variables['image']['#uri'] = file_create_url($variables['uri']);
    $variables['image']['#attributes']['style'][] = 'width:100%; height: auto;';
    unset($variables['image']['#style_name']);
  }
}
