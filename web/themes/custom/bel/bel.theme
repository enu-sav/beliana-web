<?php

/**
 * @file
 * Preprocess functions for bel.
 */

use Drupal\Core\Cache\CacheableMetadata;
use Drupal\node\NodeInterface;

/**
 * Prepares variables for the html.html.twig template.
 */
function bel_preprocess_html(&$variables): void {
  // Add cachability metadata.
  $theme_name = \Drupal::theme()->getActiveTheme()->getName();
  $theme_settings = \Drupal::config($theme_name . '.settings');
  CacheableMetadata::createFromRenderArray($variables)
    ->addCacheableDependency($theme_settings)
    ->applyTo($variables);
  // Union all theme setting variables to the html.html.twig template.
  $variables += $theme_settings->getOriginal();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bel_preprocess_region(&$variables): void {
  if (in_array($variables['region'], ['footer_left', 'footer_center'])) {
    $variables['attributes']['class'][] = str_replace('_', '-', $variables['region']);
  }
}

/**
 * Prepares variables for the field.html.twig template.
 */
function bel_preprocess_field(&$variables, $hook): void {
  $config = Drupal::config('matomo.settings');
  $variables['matomo'] = ['site_id' => $config->get('matomo_site_id', 1)];

  // Make additional variables available to the template.
  $variables['bundle'] = $variables['element']['#bundle'];
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function bel_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables): void {
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}

/**
 * Implements hook_theme_suggestions_image_alter().
 */
function bel_theme_suggestions_image_alter(array &$suggestions, array &$variables): void {
  if (($node = Drupal::routeMatch()->getParameter('node')) && $node instanceof NodeInterface) {
    if ($node->getType() === 'word') {
      $suggestions[] = 'image__' . $node->getType();
    }
  }
}
