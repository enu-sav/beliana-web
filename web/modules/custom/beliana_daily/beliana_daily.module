<?php

/**
 * @file
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_theme().
 */
function beliana_daily_theme() {
  return array(
    'colorbox_url_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'image' => NULL,
        'item_attributes' => NULL,
        'entity' => NULL,
        'settings' => NULL,
      ),
      'file' => 'beliana_daily.theme.inc',
    ),
  );
}

/**
 * Implements hook_entity_extra_field_info().
 */
function beliana_daily_entity_extra_field_info() {
  $extra = [];

  $extra['node']['word']['display']['year_by_date'] = array(
    'label' => t('Year'),
    'description' => t('Year by current date'),
    'weight' => 0,
  );

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function beliana_daily_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  switch ($entity->bundle()) {
    case 'word':
      if ($display->getComponent('year_by_date')) {
        $dates = $entity->get('field_date')->getValue();

        if (!empty($dates)) {
          $path = \Drupal::service('path.current')->getPath();
          $path_args = explode('/', $path);

          if ($path_args[1] == 'vyrocia') {
            foreach ($dates as $date) {
              $time = strtotime($date['value']);

              if (date('d', $time) == $path_args[2] && date('m', $time) == $path_args[3]) {
                $build['year_by_date'] = [
                  '#markup' => date('Y', $time),
                ];
              }
            }
          }
        }
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function beliana_daily_node_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  if (empty($build['#attached']['html_head_link'])) {
    return;
  }

  $tags = [
    'canonical',
    'shortlink',
    'delete-form',
    'edit-form',
    'version-history',
    'revision',
  ];

  foreach ($build['#attached']['html_head_link'] as $key => $tag) {
    if (empty($tag[0]['rel'])) {
      continue;
    }
    if (!in_array($tag[0]['rel'], $tags)) {
      continue;
    }

    // Hide tag.
    unset($build['#attached']['html_head_link'][$key]);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function beliana_daily_form_piwik_admin_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $config = \Drupal::getContainer()->get('config.factory')->getEditable('piwik.settings');

  $form['general']['piwik_access_token'] = [
    '#default_value' => $config->get('access_token'),
    '#description' => t('The API access token to your Piwik instance.'),
    '#maxlength' => 255,
    '#size' => 80,
    '#title' => t('Piwik API token'),
    '#type' => 'textfield',
  ];

  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'beliana_daily_piwik_admin_settings_submit';
    }
  }
}

function beliana_daily_piwik_admin_settings_submit($form, FormStateInterface $form_state) {
  $config = \Drupal::getContainer()->get('config.factory')->getEditable('piwik.settings');
  $config->set('access_token', $form_state->getValue('piwik_access_token'));
  $config->save();
}

/**
 * Implements hook_cron().
 */
function beliana_daily_cron() {
  $time = \Drupal::time()->getRequestTime();
  $interval = 60 * 60 * 12;

  if ($time >= \Drupal::state()->get('beliana_piwik_counter.last_cron_run') + $interval) {
    $queue = \Drupal::queue('beliana_piwik_counter_worker');

    // Queue all the published nodes to be counted
    $ids = \Drupal::entityQuery('node')
        ->condition('status', NODE_PUBLISHED)
        ->execute();

    foreach ($ids as $key => $nid) {
      if (is_numeric($nid)) {
        $queue->createItem(['nid' => $nid]);
      }
    }

    \Drupal::state()->set('beliana_piwik_counter.last_cron_run', $time);
    // clear cache for solr facets
    drupal_flush_all_caches();
  }
}
