<?php
/**
 * @file
 * Contains beliana_base.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\node\NodeInterface;


/**
 * Implements hook_page_attachments_alter().
 */
function beliana_base_page_attachments_alter(array &$attachments): void {
  if (in_array('mathjax/source', $attachments['#attached']['library'])) {
    $index = array_search('mathjax/source', $attachments['#attached']['library']);
    unset($attachments['#attached']['library'][$index]);
  }
  if (in_array('mathjax/setup', $attachments['#attached']['library'])) {
    $index = array_search('mathjax/setup', $attachments['#attached']['library']);
    unset($attachments['#attached']['library'][$index]);
  }
}

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 *
 * @return \null[][][]
 */
function beliana_base_theme($existing, $type, $theme, $path): array {
  return [
    'view_truncate_options' => [
      'variables' => [],
      'template' => 'view-truncate-options',
    ],
    'view_sort_options' => [
      'variables' => [
        'sort_option_active_link' => NULL,
        'sort_option_links' => NULL,
      ],
      'template' => 'view-sort-options',
    ],
  ];
}

/**
 * Implements hook_node_access().
 */
function beliana_base_node_access(NodeInterface $node): AccessResultInterface {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (!$node->hasTranslation($langcode)) {
    $access = AccessResult::forbidden();
  }
  else {
    $access = AccessResult::neutral();
  }
  $access->addCacheableDependency($node);

  return $access;
}
