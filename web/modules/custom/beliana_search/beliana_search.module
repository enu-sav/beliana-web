<?php

/**
 * @file
 */
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_pre_render
 */
function beliana_search_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'solr_search_word' && $view->current_display == 'page_3') {
    $entity_manager = \Drupal::entityTypeManager();
    $query = \Drupal::request()->query->all();

    if (isset($query['f']) && !empty($query['f'])) {
      $tree = [];

      foreach ($query['f'] as $filter) {
        $parse = explode(':', $filter);

        if ($parse[0] == 'kategorie') {
          if ($term = $entity_manager->getStorage('taxonomy_term')->load($parse[1])) {
            $depth = 0;
            $ancestors = $entity_manager->getStorage('taxonomy_term')->loadAllParents($term->id());
            $parents = array_reverse($ancestors);
            $keys = array_reverse(array_keys($ancestors));

            foreach ($parents as $parent) {
              $item = ['name' => $parent->get('name')->value];

              switch ($depth) {
                case 0:
                  if (!isset($tree[$keys[0]])) {
                    $tree[$keys[0]] = $item;
                  }
                  break;
                case 1:
                  if (!isset($tree[$keys[0]]['child'][$keys[1]])) {
                    $tree[$keys[0]]['child'][$keys[1]] = $item;
                  }
                  break;
                case 2:
                  if (!isset($tree[$keys[0]]['child'][$keys[1]]['child'][$keys[2]])) {
                    $tree[$keys[0]]['child'][$keys[1]]['child'][$keys[2]] = $item;
                  }
                  break;
                case 3:
                  if (!isset($tree[$keys[0]]['child'][$keys[1]]['child'][$keys[2]]['child'][$keys[3]])) {
                    $tree[$keys[0]]['child'][$keys[1]]['child'][$keys[2]]['child'][$keys[3]] = $item;
                  }
                  break;
              }

              $depth++;
            }
          }
        }
      }

      $title = $view->getTitle();

      if (!empty($tree)) {
        $title .= ': ';

        foreach ($tree as $tree_item) {
          $subtitle = $tree_item['name'];

          if (isset($tree_item['child'])) {
            $subtitle .= ' â€“ ' . _beliana_search_build_search_labels($tree_item['child']);
          }

          if (substr($subtitle, -2) == ', ') {
            $subtitle = substr($subtitle, 0, -2);
          }

          $title .= $subtitle . ', ';
        }

        if (substr($title, -2) == ', ') {
          $title = substr($title, 0, -2);
        }

        $view->setTitle($title);
      }
    }
  }
}

function _beliana_search_build_search_labels($tree) {
  $subtitle = '';

  foreach ($tree as $tree_item) {
    $subtitle .= $tree_item['name'];

    if (isset($tree_item['child'])) {
      $subtitle .= ' - ' . _beliana_search_build_search_labels($tree_item['child']);
    }
    else {
      $subtitle .= ', ';
    }
  }

  return $subtitle;
}
