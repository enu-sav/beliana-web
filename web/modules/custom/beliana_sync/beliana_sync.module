<?php

/**
 * @file
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_alter().
 */
function beliana_sync_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_form':
      //disable browser remember password on user edit form
      $form['account']['current_pass']['#type'] = 'textfield';
      $form['account']['current_pass']['#attributes']['onfocus'] = "this.setAttribute('type', 'password')";
      break;
  }
}

/**
 * Implements hook_entity_presave().
 */
function beliana_sync_entity_presave(EntityInterface $entity) {
  switch ($entity->bundle()) {
    case 'word':
      $entity->set('field_alphabet', _assign_alphabet_group($entity->get('field_sort')->value));
      Cache::invalidateTags(['node:' . $entity->id()]);
      break;
  }
}

/**
 * Extract alphabet group from title.
 *
 * @param string $title
 *   Title of the node.
 *
 * @return int
 *   ID of alphabet group taxonomy term.
 */
function _assign_alphabet_group($title) {
  $entity_manager = \Drupal::entityTypeManager();
  // We need to compare only first 4 characters of the lowercase string.
  $string_to_compare = mb_substr($title, 0, 4);
  $string_to_compare = mb_strtolower($string_to_compare);

  $collator = collator_create("sk_SK");
  $terms = $entity_manager->getStorage('taxonomy_term')
    ->loadTree('alphabets');

  foreach ($terms as $term) {
    if ($term->depth == 1) {
      $term_data[$term->name] = $term->tid;
    }
  }

  foreach ($term_data as $key => $val) {
    if ($collator->compare(mb_strtolower(explode(" ", $key)[0]), $string_to_compare) > 0) {
      break;
    }

    $hkey = $key;
    $htid = $val;
  }

  return $htid;
}
